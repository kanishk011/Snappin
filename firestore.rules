rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Anyone authenticated can read user profiles
      allow read: if isAuthenticated();

      // Users can only create/update their own profile
      allow create, update: if isAuthenticated() && isOwner(userId);

      // Users cannot delete profiles
      allow delete: if false;
    }

    // Personal chats collection
    match /chats/{chatId} {
      // Users can read chats they are part of
      allow read: if isAuthenticated() &&
                     request.auth.uid in resource.data.participants;

      // Users can create chats if they are one of the participants
      allow create: if isAuthenticated() &&
                       request.auth.uid in request.resource.data.participants;

      // Users can update chats they are part of
      allow update: if isAuthenticated() &&
                       request.auth.uid in resource.data.participants;

      // No one can delete chats
      allow delete: if false;

      // Messages subcollection in personal chats
      match /messages/{messageId} {
        // Users can read messages from chats they are part of
        allow read: if isAuthenticated() &&
                       request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;

        // Users can create messages in chats they are part of
        allow create: if isAuthenticated() &&
                         request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants &&
                         request.resource.data.user._id == request.auth.uid;

        // No one can update or delete messages
        allow update, delete: if false;
      }
    }

    // Groups collection
    match /groups/{groupId} {
      // Users can read groups they are members of
      allow read: if isAuthenticated() &&
                     request.auth.uid in resource.data.members;

      // Authenticated users can create groups
      allow create: if isAuthenticated() &&
                       request.auth.uid == request.resource.data.createdBy &&
                       request.auth.uid in request.resource.data.members;

      // Group members can update group info (like adding members)
      allow update: if isAuthenticated() &&
                       request.auth.uid in resource.data.members;

      // Only group creator can delete the group
      allow delete: if isAuthenticated() &&
                       request.auth.uid == resource.data.createdBy;

      // Messages subcollection in groups
      match /messages/{messageId} {
        // Group members can read messages
        allow read: if isAuthenticated() &&
                       request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;

        // Group members can create messages
        allow create: if isAuthenticated() &&
                         request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members &&
                         request.resource.data.user._id == request.auth.uid;

        // No one can update or delete messages
        allow update, delete: if false;
      }
    }
  }
}
